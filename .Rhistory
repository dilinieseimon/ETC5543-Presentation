install.packages(
"fontawesome"
)
--
---
library(emo)
library(emo)
emo::ji_find("spy")
emo::ji_find("magnify")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
warning = FALSE
)
options(htmltools.dir.version = FALSE)
library(emo)
library(xaringanExtra)
library(fontawesome)
xaringanExtra::use_panelset()
library(rgeoboundaries)
# Downloading admin level 1 boundaries of Nigeria and Chad
library(rgeoboundaries)
nigeria_chad_admlvl1_boundaries <- geoboundaries(c("Nigeria", "Chad"), "adm1")
# Visualising admin level 1 boundaries of Nigeria and Chad using leaflet
library(leaflet)
nigeria_chad_admlvl1_boundaries %>% leaflet() %>%
addTiles() %>%
addPolygons(label = nigeria_chad_admlvl1_boundaries$shapeName)
# Downloading admin level 1 boundaries of Nigeria and Chad
library(rgeoboundaries)
nigeria_chad_admlvl1_boundaries <- geoboundaries(c("Nigeria", "Chad"), "adm1")
# Visualising admin level 1 boundaries of Nigeria and Chad using ggplot2
library(ggplot2)
ggplot(data = nigeria_chad_admlvl1_boundaries) +
geom_sf()
# Downloading admin level 1 boundaries of Nigeria and Chad
library(rgeoboundaries)
nigeria_chad_admlvl1_boundaries <- geoboundaries(c("Nigeria", "Chad"), "adm1")
# Visualising admin level 1 boundaries of Nigeria and Chad using ggplot2
library(ggplot2)
ggplot(data = nigeria_chad_admlvl1_boundaries) +
geom_sf() +
ggtitle("Administrative Level 1 boundaries of Nigeria and Chad") +
labs(x = "Latitude",
y = "Longitude")
# Downloading the country boundary of Nigeria
library(rgeoboundaries)
nigeria_boundary <- geoboundaries("Nigeria")
# Visualising the boundary of Nigeria using ggplot2
library(ggplot2)
ggplot(data = nigeria_boundary) +
geom_sf() +
geom_sf_label(aes(label = shapeName))
# Downloading the country boundary of Nigeria
library(rgeoboundaries)
nigeria_boundary <- geoboundaries("Nigeria")
# Visualising the boundary of Nigeria using ggplot2
library(ggplot2)
ggplot(data = nigeria_boundary) +
geom_sf() +
geom_sf_label(aes(label = shapeName)) +
ggtitle("Boundary of Nigeria") +
labs(x = "Latitude",
y = "Longitude")
# Downloading the country boundaries of Nigeria and Chad
library(rgeoboundaries)
nigeria_chad_boundaries <- geoboundaries(c("Nigeria", "Chad"))
# Visualising the boundaries of Nigeria and Chad using ggplot2
library(ggplot2)
ggplot(data = nigeria_chad_boundaries) +
geom_sf() +
geom_sf_label(aes(label = shapeName)) +
ggtitle("Boundaries of Nigeria and Chad") +
labs(x = "Latitude",
y = "Longitude")
# Downloading admin level 2 boundaries of Nigeria and Chad
library(rgeoboundaries)
nigeria_chad_admlvl2_boundaries <- geoboundaries(c("Nigeria", "Chad"), "adm2")
# Visualising admin level 2 boundaries of Nigeria and Chad using ggplot2
library(ggplot2)
ggplot(data = nigeria_chad_admlvl2_boundaries) +
geom_sf() +
ggtitle("Administrative Level 2 boundaries of Nigeria and Chad") +
labs(x = "Latitude",
y = "Longitude")
library(osmdata)
#creating bounding box for Lagos
lagos_bb <- getbb("Lagos")
# retrieving data of hospitals in Lagos
lagos_hospitals <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "amenity", value = "hospital") %>%
osmdata_sf()
library(ggplot2)
ggplot()+
geom_sf(data = lagos_hospitals$osm_polygons)
library(osmdata)
#creating bounding box for Lagos
lagos_bb <- getbb("Lagos")
# retrieving data of hospitals in Lagos
lagos_hospitals <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "amenity", value = "hospital") %>%
osmdata_sf()
# Visualising hospitals in Lagos using ggplot2
library(ggplot2)
ggplot()+
geom_sf(data = lagos_hospitals$osm_polygons) +
ggtitle("Hospitals in Lagos") +
labs(x = "Latitude",
y = "Longitude")
library(osmdata)
# creating bounding box for Lagos
lagos_bb <- getbb("Lagos")
# retrieving data of hospitals in Lagos
lagos_hospitals <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "amenity", value = "hospital") %>%
osmdata_sf()
# retreiving roadmap of lagos
library(ggmap)
lagos_map <- get_map(lagos_bb, maptype = "roadmap")
# Visualising hospitals in Lagos using ggplot2
library(ggplot2)
ggmap(lagos_map) +
geom_sf(data = lagos_hospitals$osm_polygons,
inherit.aes = FALSE,
colour = "#08519c",
fill = "#08306b",
alpha = .5,
size = 1) +
ggtitle("Hospitals in Lagos") +
labs(x = "Latitude",
y = "Longitude")
library(osmdata)
# creating bounding box for Lagos
lagos_bb <- getbb("Lagos")
# retrieving data of streets in Lagos
lagos_streets <- lagos_bb %>%
opq() %>%
add_osm_feature("highway", c("motorway", "primary", "secondary", "tertiary")) %>%
osmdata_sf()
# retrieving data of small streets in Lagos
lagos_small_streets <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "highway", value = c("residential", "living_street", "unclassified", "service", "footway")) %>%
osmdata_sf()
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
warning = FALSE
)
options(htmltools.dir.version = FALSE)
library(emo)
library(xaringanExtra)
library(fontawesome)
xaringanExtra::use_panelset()
library(osmdata)
# creating bounding box for Lagos
lagos_bb <- getbb("Lagos")
# retrieving data of streets in Lagos
lagos_streets <- lagos_bb %>%
opq() %>%
add_osm_feature("highway", c("motorway", "primary", "secondary", "tertiary")) %>%
osmdata_sf()
# retrieving data of small streets in Lagos
lagos_small_streets <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "highway", value = c("residential", "living_street", "unclassified", "service", "footway")) %>%
osmdata_sf()
# retrieving data of rivers in Lagos
lagos_rivers <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
# retrieving data of hospitals in Lagos
lagos_hospitals <- lagos_bb %>%
opq() %>%
add_osm_feature("amenity", "hospital") %>%
osmdata_sf()
# visualising all retreived features over each other to form a map of Lagos
library(ggplot2)
ggplot() +
geom_sf(data = lagos_streets$osm_lines, inherit.aes = FALSE, color = "#ffbe7f", size = .4, alpha = .8) +
geom_sf(data = lagos_small_streets$osm_lines, inherit.aes = FALSE, color = "#a6a6a6", size = .2, alpha = .8) +
geom_sf(data = lagos_rivers$osm_lines, inherit.aes = FALSE, color = "#7fc0ff", size = .8, alpha = .5) +
geom_sf(data = lagos_hospitals$osm_polygons, inherit.aes = FALSE, colour = "#08519c", fill = "#08306b",alpha = .5, size = 1) +
coord_sf(xlim = c(3.23, 3.56), ylim = c(6.4,6.629), expand = FALSE) +
theme_bw() +
ggtitle("Hospitals in Lagos") +
labs(x = "Latitude",
y = "Longitude")
library(ggplot2)
ggplot() +
geom_sf(data = lagos_streets$osm_lines, inherit.aes = FALSE, color = "#ffbe7f", size = .4, alpha = .8) +
geom_sf(data = lagos_small_streets$osm_lines, inherit.aes = FALSE, color = "#a6a6a6", size = .2, alpha = .8) +
geom_sf(data = lagos_rivers$osm_lines, inherit.aes = FALSE, color = "#7fc0ff", size = .8, alpha = .5) +
geom_sf(data = lagos_hospitals$osm_polygons, inherit.aes = FALSE, colour = "#08519c", fill = "#08306b",alpha = .5, size = 1) +
coord_sf(xlim = c(3.23, 3.56), ylim = c(6.4,6.629), expand = FALSE) +
theme_bw() +
ggtitle("Hospitals in Lagos") +
labs(x = "Latitude",
y = "Longitude")
library(osmdata)
#creating bounding box for Lagos
lagos_bb <- getbb("Lagos")
# retrieving data of hospitals in Lagos
lagos_hospitals <- lagos_bb %>%
opq() %>%
add_osm_feature(key = "amenity", value = "hospital") %>%
osmdata_sf()
# Visualising hospitals in Lagos using leaflet
library(leaflet)
leaflet() %>%
addTiles() %>%
addPolygons(data = lagos_hospitals$osm_polygons,
label = lagos_hospitals$osm_polygons$name)
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"))
library(sf)
library(here)
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"))
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"))
library(wopr)
# Select files from the catalogue by subsetting the data frame
selection <- subset(catalogue,
country == 'NGA' &
category == 'Population' &
version == 'v1.2')
library(sf)
library(here)
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"))
admin_level2_shape %>%
ggplot(aes(fill = mean)) +
geom_sf() +
labs(title = "Choropleth map of population in Nigeria",
subtitle = "Administrative level 2 divisions") +
xlab("Longitude") +
ylab("Latitude") +
scale_fill_continuous(name = "Population")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
warning = FALSE
)
options(htmltools.dir.version = FALSE)
library(emo)
library(xaringanExtra)
library(fontawesome)
xaringanExtra::use_panelset()
library(sf)
library(here)
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"))
# Visualising population of administrative level 2 divisions of Nigeria using leaflet
library(leaflet)
color_palette <- colorBin("Blues", domain = admin_level2_shape$mean)
admin_level2_shape %>% leaflet() %>%
addTiles() %>%
addPolygons(
fillColor = ~color_palette(mean),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
label = admin_level2_shape$statename) %>%
addLegend(
pal = color_palette,
values = ~mean,
opacity = 0.7,
title = "Population",
position = "bottomright")
library(sf)
library(here)
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"))
# Visualising population of administrative level 2 divisions of Nigeria using leaflet
library(leaflet)
color_palette <- colorBin("Blues", domain = admin_level2_shape$mean)
admin_level2_shape %>% leaflet() %>%
addTiles() %>%
addPolygons(
fillColor = ~color_palette(mean),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
label = admin_level2_shape$statename) %>%
addLegend(
pal = color_palette,
values = ~mean,
opacity = 0.7,
title = "Population",
position = "bottomright")
library(sf)
library(here)
# Reading in shapefile from downloaded data
admin_level2_shape <- st_read(here::here("wopr/NGA_population_v1_2_admin_level2_boundaries.shp"),
quiet = TRUE)
# Visualising population of administrative level 2 divisions of Nigeria using leaflet
library(leaflet)
color_palette <- colorBin("Blues", domain = admin_level2_shape$mean)
admin_level2_shape %>% leaflet() %>%
addTiles() %>%
addPolygons(
fillColor = ~color_palette(mean),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
label = admin_level2_shape$statename) %>%
addLegend(
pal = color_palette,
values = ~mean,
opacity = 0.7,
title = "Population",
position = "bottomright")
install.packages("emo")
devtools::install_github("hadley/emo")
install.packages("xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("rstudio/fontawesome")
